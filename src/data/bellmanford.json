{
  "input": {
    "nodes": ["A", "B", "C", "D", "E"],
    "edges": [
      {"source": "A", "target": "B", "weight": -1},
      {"source": "A", "target": "C", "weight": 4},
      {"source": "B", "target": "C", "weight": 3},
      {"source": "B", "target": "D", "weight": 2},
      {"source": "B", "target": "E", "weight": 2},
      {"source": "D", "target": "B", "weight": 1},
      {"source": "D", "target": "C", "weight": 5},
      {"source": "E", "target": "D", "weight": -3}
    ],
    "start": "A"
  },
  "meta": {
    "algorithm": "Bellman Ford",
    "description": "Shortest path with negative weights",
    "steps": [
      {
        "step_number": 1,
        "actions": ["ðŸ”¹ Initialize distances: A=0, others=âˆž", "ðŸ”¹ Start iteration 1"],
        "state": {
          "iteration": 1,
          "distances": {"A": 0, "B": "âˆž", "C": "âˆž", "D": "âˆž", "E": "âˆž"},
          "predecessor": {"A": null, "B": null, "C": null, "D": null, "E": null},
          "relaxed_edges": []
        },
        "next_suggestion": "A-B"
      },
      {
        "step_number": 2,
        "actions": ["ðŸ”¹ Relax edge Aâ†’B (weight: -1)", "ðŸ”¹ Update distance of B"],
        "state": {
          "iteration": 1,
          "distances": {"A": 0, "B": -1, "C": "âˆž", "D": "âˆž", "E": "âˆž"},
          "predecessor": {"A": null, "B": "A", "C": null, "D": null, "E": null},
          "relaxed_edges": ["Aâ†’B"]
        },
        "next_suggestion": "A-C"
      },
      {
        "step_number": 3,
        "actions": ["ðŸ”¹ Relax edge Aâ†’C (weight: 4)", "ðŸ”¹ Update distance of C"],
        "state": {
          "iteration": 1,
          "distances": {"A": 0, "B": -1, "C": 4, "D": "âˆž", "E": "âˆž"},
          "predecessor": {"A": null, "B": "A", "C": "A", "D": null, "E": null},
          "relaxed_edges": ["Aâ†’B", "Aâ†’C"]
        },
        "next_suggestion": "B-C"
      },
      {
        "step_number": 4,
        "actions": ["ðŸ”¹ Relax edge Bâ†’C (weight: 3)", "ðŸ”¹ Update distance of C"],
        "state": {
          "iteration": 1,
          "distances": {"A": 0, "B": -1, "C": 2, "D": "âˆž", "E": "âˆž"},
          "predecessor": {"A": null, "B": "A", "C": "B", "D": null, "E": null},
          "relaxed_edges": ["Aâ†’B", "Aâ†’C", "Bâ†’C"]
        },
        "next_suggestion": "B-D"
      },
      {
        "step_number": 5,
        "actions": ["ðŸ”¹ Relax edge Bâ†’D (weight: 2)", "ðŸ”¹ Update distance of D"],
        "state": {
          "iteration": 1,
          "distances": {"A": 0, "B": -1, "C": 2, "D": 1, "E": "âˆž"},
          "predecessor": {"A": null, "B": "A", "C": "B", "D": "B", "E": null},
          "relaxed_edges": ["Aâ†’B", "Aâ†’C", "Bâ†’C", "Bâ†’D"]
        },
        "next_suggestion": "B-E"
      },
      {
        "step_number": 6,
        "actions": ["ðŸ”¹ Relax edge Bâ†’E (weight: 2)", "ðŸ”¹ Update distance of E"],
        "state": {
          "iteration": 1,
          "distances": {"A": 0, "B": -1, "C": 2, "D": 1, "E": 1},
          "predecessor": {"A": null, "B": "A", "C": "B", "D": "B", "E": "B"},
          "relaxed_edges": ["Aâ†’B", "Aâ†’C", "Bâ†’C", "Bâ†’D", "Bâ†’E"]
        },
        "next_suggestion": "D-B"
      },
      {
        "step_number": 7,
        "actions": ["ðŸ”¹ Relax edge Dâ†’B (weight: 1)", "ðŸ”¹ No improvement for B"],
        "state": {
          "iteration": 1,
          "distances": {"A": 0, "B": -1, "C": 2, "D": 1, "E": 1},
          "predecessor": {"A": null, "B": "A", "C": "B", "D": "B", "E": "B"},
          "relaxed_edges": ["Aâ†’B", "Aâ†’C", "Bâ†’C", "Bâ†’D", "Bâ†’E"]
        },
        "next_suggestion": "D-C"
      },
      {
        "step_number": 8,
        "actions": ["ðŸ”¹ Relax edge Dâ†’C (weight: 5)", "ðŸ”¹ No improvement for C"],
        "state": {
          "iteration": 1,
          "distances": {"A": 0, "B": -1, "C": 2, "D": 1, "E": 1},
          "predecessor": {"A": null, "B": "A", "C": "B", "D": "B", "E": "B"},
          "relaxed_edges": ["Aâ†’B", "Aâ†’C", "Bâ†’C", "Bâ†’D", "Bâ†’E"]
        },
        "next_suggestion": "E-D"
      },
      {
        "step_number": 9,
        "actions": ["ðŸ”¹ Relax edge Eâ†’D (weight: -3)", "ðŸ”¹ Update distance of D"],
        "state": {
          "iteration": 1,
          "distances": {"A": 0, "B": -1, "C": 2, "D": -2, "E": 1},
          "predecessor": {"A": null, "B": "A", "C": "B", "D": "E", "E": "B"},
          "relaxed_edges": ["Aâ†’B", "Aâ†’C", "Bâ†’C", "Bâ†’D", "Bâ†’E", "Eâ†’D"]
        },
        "next_suggestion": "Iteration 2"
      },
      {
        "step_number": 10,
        "actions": ["ðŸ”¹ Start iteration 2", "ðŸ”¹ Check for negative cycles"],
        "state": {
          "iteration": 2,
          "distances": {"A": 0, "B": -1, "C": 2, "D": -2, "E": 1},
          "predecessor": {"A": null, "B": "A", "C": "B", "D": "E", "E": "B"},
          "relaxed_edges": []
        },
        "next_suggestion": "D-B"
      },
      {
        "step_number": 11,
        "actions": ["ðŸ”¹ Relax edge Dâ†’B (weight: 1)", "ðŸ”¹ Update distance of B"],
        "state": {
          "iteration": 2,
          "distances": {"A": 0, "B": -1, "C": 2, "D": -2, "E": 1},
          "predecessor": {"A": null, "B": "A", "C": "B", "D": "E", "E": "B"},
          "relaxed_edges": []
        },
        "next_suggestion": "Complete"
      },
      {
        "step_number": 12,
        "actions": ["ðŸ”¹ No more improvements in iteration 2", "ðŸ”¹ Algorithm complete"],
        "state": {
          "iteration": 2,
          "distances": {"A": 0, "B": -1, "C": 2, "D": -2, "E": 1},
          "predecessor": {"A": null, "B": "A", "C": "B", "D": "E", "E": "B"},
          "relaxed_edges": [],
          "negative_cycle": false
        },
        "next_suggestion": null
      }
    ]
  }
}
